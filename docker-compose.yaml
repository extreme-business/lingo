services:
  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "8090:8080"
    volumes:
      - ./provision/swagger-ui/swagger-config.json:/swagger-config.json
      - ./proto/gen/openapiv2/public/account/v1/account_service.swagger.yaml:/account_service.swagger.yaml
    environment:
      CONFIG_URL: /swagger-config.json
      SWAGGER_JSON: /account_service.swagger.yaml

  db:
    image: postgres:14.4-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DATABASE:-postgres}
    ports:
      - 5422:5432
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./provision/postgres/01-databases.sql:/docker-entrypoint-initdb.d/01-databases.sql
    networks:
      - lingo-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 30

  account-migration:
    image: arigaio/atlas:0.26.0
    command: migrate apply --url "postgres://postgres:postgres@db:5432/lingo_account?sslmode=disable"
    volumes:
      - ./apps/account/migrations:/migrations
    networks:
      - lingo-network
    depends_on:
      db:
        condition: service_healthy

  account:
    image: lingo
    build:
      dockerfile: Dockerfile
      target: debug
    command: [ "--", "serve", "account" ]
    environment:
      LINGO_DB_URL: postgres://postgres:postgres@db:5432/lingo_account?sslmode=disable
      LINGO_GRPC_PORT: 8080
      LINGO_ACCOUNT_TLS_CERT_FILE: /src/lingo/certs/grpc-lingo.crt
      LINGO_ACCOUNT_TLS_KEY_FILE: /src/lingo/certs/grpc-lingo.key
      LINGO_SIGNING_KEY_ACCESS_TOKEN: ${LINGO_SIGNING_KEY_ACCESS_TOKEN:-}
      LINGO_SIGNING_KEY_REFRESH_TOKEN: ${LINGO_SIGNING_KEY_REFRESH_TOKEN:-}
      LINGO_SYSTEM_USER_ID: af67170c-092d-439a-9015-aefaf5b5a9d8
      LINGO_SYSTEM_USER_EMAIL: system@extreme.business
      LINGO_SYSTEM_USER_PASSWORD: ${LINGO_SYSTEM_USER_PASSWORD:-}
      LINGO_SYSTEM_ORGANIZATION_ID: f79c9967-2766-4b19-9ef6-e10f3d000c98
      LINGO_SYSTEM_ORGANIZATION_LEGAL_NAME: system
      LINGO_SYSTEM_ORGANIZATION_SLUG: system
    volumes:
      - ./certs/grpc-lingo.crt:/src/lingo/certs/grpc-lingo.crt
      - ./certs/grpc-lingo.key:/src/lingo/certs/grpc-lingo.key
    ports:
      - 8070:8080 # grpc
      - 2101:2345 # delve
    restart: unless-stopped
    depends_on:
      - db
      - account-migration
    networks:
      - lingo-network

  account-gateway:
    image: lingo
    build:
      dockerfile: Dockerfile
      target: debug
    command: [ "--", "serve", "account-gateway" ]
    environment:
      LINGO_HTTP_PORT: 8081
      LINGO_ACCOUNT_SERVICE_URL: account:8080
      LINGO_HTTP_TLS_CERT_FILE: /src/lingo/certs/http-lingo.crt
      LINGO_HTTP_TLS_KEY_FILE: /src/lingo/certs/http-lingo.key
      LINGO_ACCOUNT_TLS_CERT_FILE: /src/lingo/certs/grpc-lingo.crt
    volumes:
      - ./certs/http-lingo.crt:/src/lingo/certs/http-lingo.crt
      - ./certs/http-lingo.key:/src/lingo/certs/http-lingo.key
      - ./certs/grpc-lingo.crt:/src/lingo/certs/grpc-lingo.crt
    ports:
      - 8092:8081
    depends_on:
      - account
    networks:
      - lingo-network

  cms:
    image: lingo
    build:
      dockerfile: Dockerfile
      target: debug
    command: [ "--", "serve", "cms" ]
    environment:
      LINGO_HTTP_PORT: 8081
      LINGO_ACCOUNT_SERVICE_URL: account:8080
      LINGO_ACCOUNT_TLS_CERT_FILE: /src/lingo/certs/grpc-lingo.crt
      LINGO_SIGNING_KEY_ACCESS_TOKEN: ${LINGO_SIGNING_KEY_ACCESS_TOKEN:-}
    volumes:
      - ./certs/grpc-lingo.crt:/src/lingo/certs/grpc-lingo.crt
    ports:
      - 8093:8081
      - 2102:2345
    depends_on:
      - account
    networks:
      - lingo-network

volumes:
  db_data:

networks:
  lingo-network:
    driver: bridge

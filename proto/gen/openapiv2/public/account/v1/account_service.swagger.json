{
  "swagger": "2.0",
  "info": {
    "title": "Lingo Account API",
    "version": "1.0",
    "contact": {
      "name": "lingo",
      "url": "https://github.com/extreme-business/lingo",
      "email": "denniswethmar@gmail.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://github.com/extreme-business/lingo/blob/main/LICENSE"
    }
  },
  "tags": [
    {
      "name": "AccountService"
    }
  ],
  "host": "localhost:8092",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/login": {
      "post": {
        "operationId": "AccountService_LoginUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LoginUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LoginUserRequest"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/v1/logout": {
      "post": {
        "operationId": "AccountService_LogoutUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LogoutUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AccountService"
        ]
      }
    },
    "/v1/refresh": {
      "post": {
        "operationId": "AccountService_RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RefreshTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AccountService"
        ]
      }
    },
    "/v1/{parent}/users": {
      "get": {
        "operationId": "AccountService_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "Resource name of the parent resource where to list the users.\nFor example: \"organizations/123\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+"
          }
        ],
        "tags": [
          "AccountService"
        ]
      },
      "post": {
        "operationId": "AccountService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "Resource name of the parent resource where to create the user.\nFor example: \"organizations/123\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "organizations/[^/]+"
          },
          {
            "name": "user",
            "description": "The user resource to be created. Client must not set the `User.name` field.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CreateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User",
          "description": "The user that was registered"
        }
      },
      "required": [
        "user"
      ]
    },
    "v1ListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          },
          "description": "The users in the parent resource"
        }
      },
      "required": [
        "users"
      ]
    },
    "v1LoginUserRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email of a user"
        },
        "password": {
          "type": "string",
          "description": "The password of a user"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "v1LoginUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User",
          "description": "The user that was logged in"
        },
        "accessToken": {
          "type": "string",
          "description": "The access token that was generated"
        },
        "refreshToken": {
          "type": "string",
          "description": "The refresh token that was generated"
        }
      },
      "required": [
        "user",
        "accessToken",
        "refreshToken"
      ]
    },
    "v1LogoutUserResponse": {
      "type": "object"
    },
    "v1RefreshTokenResponse": {
      "type": "object"
    },
    "v1User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The user's unique identifier. example: users/dd69abd0-4f8b-4e53-9acd-4c38f87e7047"
        },
        "displayName": {
          "type": "string",
          "description": "The user's display name."
        },
        "email": {
          "type": "string",
          "description": "The user's email."
        },
        "password": {
          "type": "string",
          "description": "The user's password."
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "deleteTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "description": "Enter the token with the `Bearer: ` prefix, e.g. Bearer abcde12345",
      "name": "Accountorization",
      "in": "header"
    }
  }
}
